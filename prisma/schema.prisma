generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  isDeletedAt      DateTime?
  name             String
  email            String            @unique
  password         String
  products         Product[]
  productFavorites ProductFavorite[]
  ProductImages    ProductImage[]
}

model Product {
  id               String            @id @default(uuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  isDeletedAt      DateTime?
  favoriteCount    Int               @default(0)
  owner            User?             @relation(fields: [ownerId], references: [id], onDelete: SetNull)
  ownerId          String?
  title            String
  tags             String[]
  price            Int
  description      String
  productFavorites ProductFavorite[]
  productImages    ProductImage[]
}

model ProductFavorite {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  isDeletedAt DateTime?
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

model ProductImage {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  isDeletedAt DateTime?
  s3key       String
  owner       User?     @relation(fields: [ownerId], references: [id], onDelete: SetNull)
  ownerId     String?
  product     Product?  @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId   String?
}
